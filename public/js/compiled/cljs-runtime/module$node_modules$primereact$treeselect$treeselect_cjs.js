shadow$provide.module$node_modules$primereact$treeselect$treeselect_cjs=function(global,require,module,exports){function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}function _typeof(obj$jscomp$0){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&
"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj$jscomp$0)}function _defineProperty(obj,key,value){a:if("object"===_typeof(key)&&null!==key){var prim=key[Symbol.toPrimitive];if(void 0!==prim){key=prim.call(key,"string");if("object"!==_typeof(key))break a;throw new TypeError("@@toPrimitive must return a primitive value.");}key=String(key)}key="symbol"===
_typeof(key)?key:String(key);key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value;return obj}function _arrayLikeToArray$1(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _slicedToArray(arr,i){var JSCompiler_inline_result=Array.isArray(arr)?arr:void 0;if(!JSCompiler_inline_result)a:{var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];
if(null!=_i){var _s,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i){JSCompiler_inline_result=void 0;break a}_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0;var _e=err}finally{try{if(!_n&&null!=_i["return"]&&(_r=_i["return"](),Object(_r)!==_r)){JSCompiler_inline_result=void 0;break a}}finally{if(_d)throw _e;}}JSCompiler_inline_result=_arr}else JSCompiler_inline_result=void 0}if(!(_s=JSCompiler_inline_result))a:{if(arr){if("string"===
typeof arr){_s=_arrayLikeToArray$1(arr,i);break a}_s=Object.prototype.toString.call(arr).slice(8,-1);"Object"===_s&&arr.constructor&&(_s=arr.constructor.name);if("Map"===_s||"Set"===_s){_s=Array.from(arr);break a}if("Arguments"===_s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_s)){_s=_arrayLikeToArray$1(arr,i);break a}}_s=void 0}if(!(arr=_s))throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
return arr}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,
key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!==typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&
(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=it.call(o)},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=
!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,
len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$react$index");var PrimeReact=require("module$node_modules$primereact$api$api_cjs"),hooks=require("module$node_modules$primereact$hooks$hooks_cjs"),chevrondown=require("module$node_modules$primereact$icons$chevrondown$index_cjs"),search=require("module$node_modules$primereact$icons$search$index_cjs"),
times=require("module$node_modules$primereact$icons$times$index_cjs"),overlayservice=require("module$node_modules$primereact$overlayservice$overlayservice_cjs"),ripple=require("module$node_modules$primereact$ripple$ripple_cjs"),tree=require("module$node_modules$primereact$tree$tree_cjs"),utils=require("module$node_modules$primereact$utils$utils_cjs"),csstransition=require("module$node_modules$primereact$csstransition$csstransition_cjs"),portal=require("module$node_modules$primereact$portal$portal_cjs"),
React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(global),PrimeReact__default=PrimeReact&&"object"===typeof PrimeReact&&"default"in PrimeReact?PrimeReact:{"default":PrimeReact},TreeSelectBase={defaultProps:{__TYPE:"TreeSelect",appendTo:null,ariaLabel:null,
ariaLabelledBy:null,className:null,closeIcon:null,disabled:!1,display:"comma",dropdownIcon:null,emptyMessage:null,expandedKeys:null,filter:!1,filterBy:"label",filterIcon:null,filterInputAutoFocus:!0,filterLocale:void 0,filterMode:"lenient",filterPlaceholder:null,filterTemplate:null,filterValue:null,inputId:null,inputRef:null,metaKeySelection:!0,name:null,onChange:null,onFilterValueChange:null,onHide:null,onNodeCollapse:null,onNodeExpand:null,onNodeSelect:null,onNodeUnselect:null,onShow:null,options:null,
panelClassName:null,panelFooterTemplate:null,panelHeaderTemplate:null,panelStyle:null,placeholder:null,resetFilterOnHide:!1,scrollHeight:"400px",selectionMode:"single",style:null,tabIndex:null,transitionOptions:null,value:null,valueTemplate:null,children:void 0},getProps:function(props){return utils.ObjectUtils.getMergedProps(props,TreeSelectBase.defaultProps)},getOtherProps:function(props){return utils.ObjectUtils.getDiffProps(props,TreeSelectBase.defaultProps)}},TreeSelectPanel=React__namespace.forwardRef(function(props,
ref){var wrapperStyle={maxHeight:props.scrollHeight||"auto"},className=utils.classNames("p-treeselect-panel p-component",props.panelClassName,{"p-input-filled":"filled"===PrimeReact__default["default"].inputStyle,"p-ripple-disabled":!1===PrimeReact__default["default"].ripple});ref=React__namespace.createElement(csstransition.CSSTransition,{nodeRef:ref,classNames:"p-connected-overlay","in":props["in"],timeout:{enter:120,exit:100},options:props.transitionOptions,unmountOnExit:!0,onEnter:props.onEnter,
onEntering:props.onEntering,onEntered:props.onEntered,onExit:props.onExit,onExited:props.onExited},React__namespace.createElement("div",{ref,className,style:props.panelStyle,onClick:props.onClick},props.header,React__namespace.createElement("div",{className:"p-treeselect-items-wrapper",style:wrapperStyle},props.children),props.footer));return React__namespace.createElement(portal.Portal,{element:ref,appendTo:props.appendTo})});TreeSelectPanel.displayName="TreeSelectPanel";require=React__namespace.memo(React__namespace.forwardRef(function(inProps,
ref){var props=TreeSelectBase.getProps(inProps);inProps=React__namespace.useState(!1);var _React$useState2=_slicedToArray(inProps,2);inProps=_React$useState2[0];var setFocusedState=_React$useState2[1];_React$useState2=React__namespace.useState(!1);_React$useState2=_slicedToArray(_React$useState2,2);var overlayVisibleState=_React$useState2[0],setOverlayVisibleState=_React$useState2[1];_React$useState2=React__namespace.useState(props.expandedKeys);_React$useState2=_slicedToArray(_React$useState2,2);
var expandedKeysState=_React$useState2[0],setExpandedKeysState=_React$useState2[1];_React$useState2=React__namespace.useState("");_React$useState2=_slicedToArray(_React$useState2,2);var filterValueState=_React$useState2[0],setFilterValueState=_React$useState2[1],elementRef=React__namespace.useRef(null),overlayRef=React__namespace.useRef(null),filterInputRef=React__namespace.useRef(null),focusInputRef=React__namespace.useRef(props.inputRef),triggerRef=React__namespace.useRef(null),selfChange=React__namespace.useRef(null);
_React$useState2=props.onToggle?props.expandedKeys:expandedKeysState;var filteredValue=props.onFilterValueChange?props.filterValue:filterValueState,isValueEmpty=utils.ObjectUtils.isEmpty(props.value);filterValueState=utils.ObjectUtils.isEmpty(props.options);var isSingleSelectionMode="single"===props.selectionMode,isCheckboxSelectionMode="checkbox"===props.selectionMode,filterOptions={filter:function(e){return onFilterInputChange(e)},reset:function(){setFilterValueState("")}},_useOverlayListener=hooks.useOverlayListener({target:elementRef,
overlay:overlayRef,listener:function(event,_ref){_ref.valid&&hide()},when:overlayVisibleState});_useOverlayListener=_slicedToArray(_useOverlayListener,2);var bindOverlayListener=_useOverlayListener[0],unbindOverlayListener=_useOverlayListener[1],getLabel=function(){return selectedNodes.length?selectedNodes.map(function(node){return node.label}).join(", "):props.placeholder},hide=function(){setOverlayVisibleState(!1)},onFilterInputKeyDown=function(event){13===event.which&&event.preventDefault()},onFilterInputChange=
function(event){var value=event.target.value;if(props.onFilterValueChange)props.onFilterValueChange({originalEvent:event,value});else setFilterValueState(value)},alignOverlay=function(){utils.DomHandler.alignOverlay(overlayRef.current,triggerRef.current.parentElement,props.appendTo||PrimeReact__default["default"].appendTo)},findSelectedNodes=function findSelectedNodes(node,keys,selectedNodes){if(node){if(isCheckboxSelectionMode?keys[node.key]&&keys[node.key].checked:keys[node.key])selectedNodes.push(node),
delete keys[node.key];if(Object.keys(keys).length&&node.children){var _iterator=_createForOfIteratorHelper(node.children),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;)findSelectedNodes(_step.value,keys,selectedNodes)}catch(err){_iterator.e(err)}finally{_iterator.f()}}}else{_step=_createForOfIteratorHelper(props.options);try{for(_step.s();!(_iterator=_step.n()).done;)findSelectedNodes(_iterator.value,keys,selectedNodes)}catch(err){_step.e(err)}finally{_step.f()}}},updateTreeState=function(){var keys=
isSingleSelectionMode?_defineProperty({},"".concat(props.value),!0):_objectSpread({},props.value);setExpandedKeysState({});keys&&props.options&&updateTreeBranchState(null,null,keys)},updateTreeBranchState=function updateTreeBranchState(node,path,keys){if(node){if(isCheckboxSelectionMode?keys[node.key]&&keys[node.key].checked:keys[node.key]){if(0<path.length){var _expandedKeys=_objectSpread({},expandedKeysState||{}),_iterator5=_createForOfIteratorHelper(path),_step5;try{for(_iterator5.s();!(_step5=
_iterator5.n()).done;)_expandedKeys[_step5.value]=!0}catch(err){_iterator5.e(err)}finally{_iterator5.f()}setExpandedKeysState(_expandedKeys)}delete keys[node.key]}if(Object.keys(keys).length&&node.children){_step5=_createForOfIteratorHelper(node.children);var _step3;try{for(_step5.s();!(_step3=_step5.n()).done;){var childNode=_step3.value;path.push(node.key);updateTreeBranchState(childNode,path,keys)}}catch(err){_step5.e(err)}finally{_step5.f()}}}else{node=_createForOfIteratorHelper(props.options);
try{for(node.s();!(_expandedKeys=node.n()).done;)updateTreeBranchState(_expandedKeys.value,[],keys)}catch(err){node.e(err)}finally{node.f()}}};React__namespace.useImperativeHandle(ref,function(){return{props,focus:function(){return utils.DomHandler.focus(focusInputRef.current)},getElement:function(){return elementRef.current}}});React__namespace.useEffect(function(){utils.ObjectUtils.combinedRefs(focusInputRef,props.inputRef)},[focusInputRef,props.inputRef]);hooks.useMountEffect(function(){updateTreeState();
props.autoFocus&&utils.DomHandler.focus(focusInputRef.current,props.autoFocus)});hooks.useUpdateEffect(function(){overlayVisibleState&&props.filter&&alignOverlay()});hooks.useUpdateEffect(function(){updateTreeState()},[props.options]);hooks.useUpdateEffect(function(){overlayVisibleState&&expandedKeysState&&alignOverlay()},[expandedKeysState]);hooks.useUpdateEffect(function(){overlayVisibleState&&(selfChange.current||updateTreeState(),selfChange.current=!1)},[props.value]);hooks.useUnmountEffect(function(){utils.ZIndexUtils.clear(overlayRef.current)});
var selectedNodes=function(){var selectedNodes=[];if(utils.ObjectUtils.isNotEmpty(props.value)&&props.options){var keys=isSingleSelectionMode?_defineProperty({},"".concat(props.value),!0):_objectSpread({},props.value);findSelectedNodes(null,keys,selectedNodes)}return selectedNodes}();ref=TreeSelectBase.getOtherProps(props);_useOverlayListener=utils.ObjectUtils.reduceKeys(ref,utils.DomHandler.ARIA_PROPS);inProps=utils.classNames("p-treeselect p-component p-inputwrapper",{"p-treeselect-chip":"chip"===
props.display,"p-disabled":props.disabled,"p-focus":inProps,"p-inputwrapper-filled":!isValueEmpty,"p-inputwrapper-focus":inProps||overlayVisibleState},props.className);_useOverlayListener=React__namespace.createElement("div",{className:"p-hidden-accessible"},React__namespace.createElement("input",_extends({ref:focusInputRef,role:"listbox",id:props.inputId,type:"text",readOnly:!0,"aria-expanded":overlayVisibleState,onFocus:function(){setFocusedState(!0)},onBlur:function(){setFocusedState(!1)},onKeyDown:function(event){switch(event.which){case 40:!overlayVisibleState&&
event.altKey&&setOverlayVisibleState(!0);break;case 32:overlayVisibleState||(setOverlayVisibleState(!0),event.preventDefault());break;case 13:case 27:overlayVisibleState&&(hide(),event.preventDefault());break;case 9:hide()}},disabled:props.disabled,tabIndex:props.tabIndex},_useOverlayListener)));var labelElement=function(){var labelClassName=utils.classNames("p-treeselect-label",{"p-placeholder":getLabel()===props.placeholder,"p-treeselect-label-empty":!props.placeholder&&isValueEmpty}),content=null;
props.valueTemplate?content=utils.ObjectUtils.getJSXElement(props.valueTemplate,selectedNodes,props):"comma"===props.display?content=getLabel()||"empty":"chip"===props.display&&(content=React__namespace.createElement(React__namespace.Fragment,null,selectedNodes&&selectedNodes.map(function(node,index){return React__namespace.createElement("div",{className:"p-treeselect-token",key:"".concat(node.key,"_").concat(index)},React__namespace.createElement("span",{className:"p-treeselect-token-label"},node.label))}),
isValueEmpty&&(props.placeholder||"empty")));return React__namespace.createElement("div",{className:"p-treeselect-label-container"},React__namespace.createElement("div",{className:labelClassName},content))}(),dropdownIcon=function(){var icon=props.dropdownIcon||React__namespace.createElement(chevrondown.ChevronDownIcon,{className:"p-treeselect-trigger-icon p-clickable"});icon=utils.IconUtils.getJSXIcon(icon,{className:"p-treeselect-trigger-icon p-clickable"},{props});return React__namespace.createElement("div",
{ref:triggerRef,className:"p-treeselect-trigger",role:"button","aria-haspopup":"listbox","aria-expanded":overlayVisibleState},icon)}();_React$useState2=React__namespace.createElement(React__namespace.Fragment,null,React__namespace.createElement(tree.Tree,{value:props.options,selectionMode:props.selectionMode,selectionKeys:props.value,metaKeySelection:props.metaKeySelection,onSelectionChange:function(event){props.onChange&&(selfChange.current=!0,props.onChange({originalEvent:event.originalEvent,value:event.value,
stopPropagation:function(){event.originalEvent.stopPropagation()},preventDefault:function(){event.originalEvent.preventDefault()},target:{name:props.name,id:props.id,value:event.value}}))},onSelect:function(node){props.onNodeSelect&&props.onNodeSelect(node);isSingleSelectionMode&&hide()},onUnselect:function(node){props.onNodeUnselect&&props.onNodeUnselect(node)},expandedKeys:_React$useState2,onToggle:function(e){if(props.onToggle)props.onToggle(e);else setExpandedKeysState(e.value)},onExpand:props.onNodeExpand,
onCollapse:props.onNodeCollapse,filter:props.filter,filterValue:filteredValue,filterBy:props.filterBy,filterMode:props.filterMode,filterPlaceholder:props.filterPlaceholder,filterLocale:props.filterLocale,showHeader:!1,onFilterValueChange:function(e){setFilterValueState(e.value)}}),filterValueState&&React__namespace.createElement("div",{className:"p-treeselect-empty-message"},props.emptyMessage||PrimeReact.localeOption("emptyMessage")));filterValueState=function(){if(props.filter){var filterElement=
utils.ObjectUtils.isNotEmpty(filteredValue)?filteredValue:"";var icon=props.filterIcon||React__namespace.createElement(search.SearchIcon,{className:"p-treeselect-filter-icon"});icon=utils.IconUtils.getJSXIcon(icon,{className:"p-treeselect-filter-icon"},{props});filterElement=React__namespace.createElement("div",{className:"p-treeselect-filter-container"},React__namespace.createElement("input",{ref:filterInputRef,type:"text",value:filterElement,autoComplete:"off",className:"p-treeselect-filter p-inputtext p-component",
placeholder:props.filterPlaceholder,onKeyDown:onFilterInputKeyDown,onChange:onFilterInputChange,disabled:props.disabled}),icon);props.filterTemplate&&(filterElement=utils.ObjectUtils.getJSXElement(props.filterTemplate,{className:"p-treeselect-filter-container",element:filterElement,filterOptions,filterInputKeyDown:onFilterInputKeyDown,filterInputChange:onFilterInputChange,filterIconClassName:"p-dropdown-filter-icon",props}));filterElement=React__namespace.createElement(React__namespace.Fragment,null,
filterElement)}else filterElement=void 0;icon={className:"p-treeselect-close-icon","aria-hidden":!0};var icon$jscomp$0=props.closeIcon||React__namespace.createElement(times.TimesIcon,icon);icon=utils.IconUtils.getJSXIcon(icon$jscomp$0,_objectSpread({},icon),{props});icon=React__namespace.createElement("button",{type:"button",className:"p-treeselect-close p-link",onClick:hide,"aria-label":PrimeReact.localeOption("close")},icon,React__namespace.createElement(ripple.Ripple,null));icon$jscomp$0=React__namespace.createElement("div",
{className:"p-treeselect-header"},filterElement,icon);return props.panelHeaderTemplate?utils.ObjectUtils.getJSXElement(props.panelHeaderTemplate,{className:"p-treeselect-header",filterElement,closeElement:icon,closeElementClassName:"p-treeselect-close p-link",closeIconClassName:"p-treeselect-close-icon",onCloseClick:hide,element:icon$jscomp$0,props}):icon$jscomp$0}();var footer=utils.ObjectUtils.getJSXElement(props.panelFooterTemplate,props);return React__namespace.createElement("div",_extends({ref:elementRef,
className:inProps,style:props.style},ref,{onClick:function(event){props.disabled||overlayRef.current&&overlayRef.current.contains(event.target)||utils.DomHandler.hasClass(event.target,"p-treeselect-close")||(utils.DomHandler.focus(focusInputRef.current),overlayVisibleState?hide():setOverlayVisibleState(!0))}}),_useOverlayListener,labelElement,dropdownIcon,React__namespace.createElement(TreeSelectPanel,{ref:overlayRef,appendTo:props.appendTo,panelStyle:props.panelStyle,panelClassName:props.panelClassName,
scrollHeight:props.scrollHeight,onClick:function(event){overlayservice.OverlayService.emit("overlay-click",{originalEvent:event,target:elementRef.current})},header:filterValueState,footer,transitionOptions:props.transitionOptions,"in":overlayVisibleState,onEnter:function(){utils.ZIndexUtils.set("overlay",overlayRef.current,PrimeReact__default["default"].autoZIndex,PrimeReact__default["default"].zIndex.overlay);alignOverlay();var highlightItem=utils.DomHandler.findSingle(overlayRef.current,".p-treenode-content.p-highlight");
highlightItem&&highlightItem.scrollIntoView&&highlightItem.scrollIntoView({block:"nearest",inline:"start"})},onEntered:function(){bindOverlayListener();props.filter&&props.filterInputAutoFocus&&utils.DomHandler.focus(filterInputRef.current,props.filterInputAutoFocus);props.onShow&&props.onShow()},onExit:function(){unbindOverlayListener()},onExited:function(){props.filter&&props.resetFilterOnHide&&setFilterValueState("");utils.ZIndexUtils.clear(overlayRef.current);props.onHide&&props.onHide()}},_React$useState2))}));
require.displayName="TreeSelect";exports.TreeSelect=require}
//# sourceMappingURL=module$node_modules$primereact$treeselect$treeselect_cjs.js.map
