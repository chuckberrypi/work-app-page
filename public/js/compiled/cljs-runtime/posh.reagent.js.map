{"version":3,"sources":["posh/reagent.cljs"],"mappings":";AAQA,AAAKA,oBACH,wBAAA,wCAAA,8CAAA,8DAAA,gDAAA,sEAAA,uDAAA,+DAAA,yDAAA,sDAAA,sDAAA,uDAAA,sDAAA,zpBAAMC,mwBAAqBC,+LACAC,zNACAC,lBACAC,4IACAC,mDACAC,sBACAC,xGACAC,mJACAC,7FACAC,xEACAC,5BACAC;AAX3B,AAYE,0DAAA,nDAACC,8CAAMb,0DAAW,AAACc,gDAAQC,2BAAef;;AAE9C,AAAA,AAAAgB,mCAAA,AAAAF,gDAAAG,qCAAiBlB;;AAAjB,AAAAmB,yBAAA,AAAAJ,gDAAAC,2BAAiBhB;;AAAjB,AAAAoB,uCAAA,AAAAL,gDAAAM,yCAAiBrB;;AAAjB,AAAAsB,0BAAA,AAAAP,gDAAAQ,4BAAiBvB;;AAAjB,AAAAwB,4BAAA,AAAAT,gDAAAU,8BAAiBzB;;AAAjB,AAAA0B,6BAAA,AAAAX,gDAAAY,+BAAiB3B;;AAAjB,AAAA4B,sBAAA,AAAAb,gDAAAc,wBAAiB7B;;AAAjB,AAAA8B,4BAAA,AAAAf,gDAAAgB,8BAAiB/B;;AAAjB,AAAAgC,mCAAA,AAAAjB,gDAAAkB,qCAAiBjC;;AAAjB,AAAAkC,oBAAA,AAAAnB,gDAAAoB,sBAAiBnC;;AAAjB,AAAAoC,yBAAA,AAAArB,gDAAAsB,2BAAiBrC;;AAAjB,AAAAsC,uBAAA,AAAAvB,gDAAAwB,yBAAiBvC;;AAAjB,AAAAwC,yBAAA,AAAAzB,gDAAA0B,2BAAiBzC;;AAAjB,AAAA0C,6BAAA,AAAA3B,gDAAA4B,+BAAiB3C;;AAAjB,AAAA4C,4BAAA,AAAA7B,gDAAA8B,8BAAiB7C;;AAAjB,AAAA8C,iBAAA,AAAA/B,gDAAAgC,mBAAiB/C;;AAAjB,AAAAgD,sBAAA,AAAAjC,gDAAAkC,wBAAiBjD;;AAAjB,AAAAkD,oBAAA,AAAAnC,gDAAAoC,sBAAiBnD;;AAAjB,AAAAoD,yBAAA,AAAArC,gDAAAsC,2BAAiBrD;;AAAjB,AAAAsD,2BAAA,AAAAvC,gDAAAwC,6BAAiBvD;;AAAjB,AAAAwD,wBAAA,AAAAzC,gDAAA0C,0BAAiBzD;;AAAjB,AAAA0D,8BAAA,AAAA3C,gDAAA4C,gCAAiB3D","names":["posh.reagent/dcfg","dcfg","datascript.core/db","datascript.core/pull","datascript.core/pull-many","datascript.core/q","datascript.core/filter","datascript.core/with","datascript.core/entid","datascript.core/transact!","datascript.core/listen!","datascript.core/conn?","reagent.core/atom","reagent.ratom/make-reaction","cljs.core.assoc","cljs.core.partial","posh.plugin-base/safe-pull","posh.reagent/missing-pull-result","posh.plugin-base/missing-pull-result","posh.reagent/safe-pull","posh.reagent/set-conn-listener!","posh.plugin-base/set-conn-listener!","posh.reagent/posh!","posh.plugin-base/posh!","posh.reagent/get-conn-var","posh.plugin-base/get-conn-var","posh.reagent/get-posh-atom","posh.plugin-base/get-posh-atom","posh.reagent/get-db","posh.plugin-base/get-db","posh.reagent/rm-posh-item","posh.plugin-base/rm-posh-item","posh.reagent/make-query-reaction","posh.plugin-base/make-query-reaction","posh.reagent/pull","posh.plugin-base/pull","posh.reagent/pull-info","posh.plugin-base/pull-info","posh.reagent/pull-tx","posh.plugin-base/pull-tx","posh.reagent/pull-many","posh.plugin-base/pull-many","posh.reagent/parse-q-query","posh.plugin-base/parse-q-query","posh.reagent/q-args-count","posh.plugin-base/q-args-count","posh.reagent/q","posh.plugin-base/q","posh.reagent/q-info","posh.plugin-base/q-info","posh.reagent/q-tx","posh.plugin-base/q-tx","posh.reagent/filter-tx","posh.plugin-base/filter-tx","posh.reagent/filter-pull","posh.plugin-base/filter-pull","posh.reagent/filter-q","posh.plugin-base/filter-q","posh.reagent/transact!","posh.plugin-base/transact!"],"sourcesContent":["(ns posh.reagent\n  (:require-macros [reagent.ratom :refer [reaction]])\n  (:require [posh.plugin-base :as base\n             :include-macros true]\n            [datascript.core :as d]\n            [reagent.core :as r]\n            [reagent.ratom :as ra]))\n\n(def dcfg\n  (let [dcfg {:db            d/db\n              :pull*         d/pull\n              :pull-many     d/pull-many\n              :q             d/q\n              :filter        d/filter\n              :with          d/with\n              :entid         d/entid\n              :transact!     d/transact!\n              :listen!       d/listen!\n              :conn?         d/conn?\n              :ratom         r/atom\n              :make-reaction ra/make-reaction}]\n    (assoc dcfg :pull (partial base/safe-pull dcfg))))\n\n(base/add-plugin dcfg)\n"]}