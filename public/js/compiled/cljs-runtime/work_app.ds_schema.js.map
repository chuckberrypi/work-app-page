{"version":3,"sources":["work_app/ds_schema.cljs"],"mappings":";AAMA,+BAAA,wCAAA,qEAAA,sEAAA,+DAAA,2DAAA,iEAAA,oEAAA,yDAAA,kEAAA,4DAAA,+DAAA,6DAAA,+DAAA,2EAAA,4DAAA,2EAAA,6DAAA,2DAAA,iEAAA,6DAAA,8DAAA,oEAAA,uEAAA,2CAAA,2DAAA,sFAAA,2CAAA,sEAAA,+EAAA,qEAAA,KAAA,kEAAA,yEAAA,2CAAA,sEAAA,sFAAA,2CAAA,2DAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,+EAAA,kEAAA,iEAAA,qEAAA,aAAA,2CAAA,2DAAA,sFAAA,2CAAA,sEAAA,+EAAA,qEAAA,KAAA,kEAAA,yEAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,2DAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,+EAAA,qEAAA,KAAA,kEAAA,yEAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,sEAAA,sFAAA,2CAAA,2DAAA,z5MAAKA;AAoCL","names":["work-app.ds-schema/ds-schema"],"sourcesContent":[";; (c) David F Stearns 2023\n(ns work-app.ds-schema\n  (:require\n   [datascript.core :as ds :refer [empty-db]]\n   [work-app.db :as db]))\n\n(def ds-schema\n  {\n   :task/id          {:db/unique :db.unique/identity}\n   :task/time        {:db/cardinality :db.cardinality/one}\n   :task/date        {:db/cardinality :db.cardinality/one}\n   :task/description {:db/cardinality :db.cardinality/one}\n   :task/order       {:db/cardinality :db.cardinality/one}\n   :task/code        {:db/cardinality :db.cardinality/one}\n   :task/location    {:db/cardinality :db.cardinality/one}\n   :task/status      {:db/cardinality :db.cardinality/one}\n\n   :code/key      {:db/cardinality :db.cardinality/one}\n   :code/label    {:db/cardinality :db.cardinality/one}\n   :code/code     {:db/cardinality :db.cardinality/one}\n   :code/children {:db/cardinality :db.cardinality/many\n                   :db/valueType   :db.type/ref\n                   :db/isComponent true}\n\n   :matter/id        {:db/unique :db.unique/identity}\n   :matter/order-vec {:db/cardinality :db.cardinality/one}\n   :matter/number    {:db/unique :db.unique/identity}\n   :matter/name      {:db/cardinality :db.cardinality/one}\n   :matter/codes     {:db/cardinality :db.cardinality/many\n                      :db/isComponent true\n                      :db/valueType   :db.type/ref}\n   :matter/tasks     {:db/cardinality :db.cardinality/many\n                      :db/isComponent true\n                      :db/valueType   :db.type/ref}\n\n   :client/id      {:db/unique :db.unique/identity}\n   :client/number  {:db/unique :db.unique/identity}\n   :client/name    {:db/cardinality :db.cardinality/one}\n   :client/matters {:db/cardinality :db.cardinality/many\n                    :db/isComponent true\n                    :db/valueType   :db.type/ref}})\n\n(comment\n  (let [conn (ds/conn-from-db (ds/empty-db ds-schema))]\n    (ds/transact! conn [{:db/id          -2\n                         :client/name    \"Monsanto\"\n                         :client/number  \"012345\"\n                         :client/matters [{:db/id         -1\n                                           :matter/id     (random-uuid)\n                                           :matter/name   \"Back\"\n                                           :matter/number \"985798\"}\n                                          {:db/id         -3\n                                           :matter/id     (random-uuid)\n                                           :matter/name   \"Seattle\"\n                                           :matter/number \"756303\"}]}])\n    (ds/q\n     '[:find ?m ?mnum ?mname\n       :in $ ?cname\n       :where\n       [?e :client/name ?cname]\n       [?m :matter/name ?mname]\n       [?m :matter/number ?mnum]]\n     @conn \"Monsanto\"))\n\n  (let [conn (ds/create-conn {:code/label    {:db/cardinality :db.cardinality/one}\n                              :code/children {:db/cardinality :db.cardinality/many\n                                              :db/valueType   :db.type/ref\n                                              :db/isComponent true}})]\n    (ds/transact! conn [{:db/id         1\n                         :code/label    \"One\"\n                         :code/children [2 3]}\n                        {:db/id      2\n                         :code/label \"Two\"}\n                        {:db/id         3\n                         :code/label    \"Three\"\n                         :code/children [4]}\n                        {:db/id      4\n                         :code/label \"Four\"}])\n    (ds/pull @conn '[:db/id {:code/_children ...}] 4)\n    )\n\n  )\n"]}