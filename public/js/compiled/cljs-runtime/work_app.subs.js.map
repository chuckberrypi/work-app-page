{"version":3,"sources":["work_app/subs.cljs"],"mappings":"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","names":["work-app.subs/<sub","cljs.core.comp","cljs.core/deref","re-frame.core/subscribe","re_frame.core.reg_sub","db__28778__auto__","p__28995","vec__29000","_","cljs.core.nth","matter-id28927","group-id28928","cljs.core.get_in","p__29011","vec__29012","p__29019","vec__29021","code-id28929","p__29031","vec__29034","matter-id28930","p__29043","vec__29044","p__29051","vec__29053","matter-id28931","group-id28932","p__29062","vec__29065","p__29074","vec__29076","e-id28933","p__29087","vec__29088","code-id28934","p__29098","vec__29100","matter-id28935","group-id28936","task-id28937","p__29112","vec__29113","p__29123","vec__29127","p__29139","vec__29141","matter-id28938","group-id28939","task-id28940","p__29153","vec__29154","p__29162","vec__29163","p__29170","vec__29171","p__29179","vec__29180","p__29188","vec__29189","p__29197","vec__29198","p__29206","vec__29209","matter-id28941","p__29219","vec__29220","client-id28942","p__29227","vec__29228","t-id28943","p__29236","vec__29239","client-id28944","matter-id28945","p__29251","vec__29252","matter-id28946","group-id28947","task-id28948","p__29266","vec__29267","p__29271","vec__29274","code-id28949","p__29283","vec__29285","matter-id28950","p__29293","vec__29296","matter-id28951","group-id28952","task-id28953","p__29306","vec__29308","p__29322","vec__29324","p__29332","vec__29333","p__29343","vec__29344","client-id28954","matter-id28955","p__29352","vec__29353","t-id28956","p__29360","vec__29363","p__29374","vec__29377","matter-id28957","group-id28958","p__29392","vec__29394","matter-id28959","p__29408","vec__29409","matter-id28960","group-id28961","task-id28962","p__29412","vec__29415","p__29419","vec__29420","matter-id28963","group-id28964","p__29426","vec__29427","e-id28965","p__29435","vec__29437","e-id28966","p__29445","vec__29446","t-id28967","p__29452","vec__29455","e-id28968","p__29462","vec__29463","p__29470","vec__29472","m-id28969","p__29479","vec__29481","matter-id28970","group-id28971","task-id28972","p__29491","vec__29492","m-id28973","p__29503","vec__29504","p__29512","vec__29513","p__29520","vec__29521","matter-id28974","group-id28975","p__29528","vec__29529","matter-id28976","p__29540","vec__29543","p__29550","vec__29553","p__29560","vec__29561","p__29568","vec__29569","client-id28977","matter-id28978","p__29580","vec__29583","code-id28979","p__29587","vec__29588","t-id28980","p__29593","vec__29594","t-id28981","p__29601","vec__29602","matter-id28982","group-id28983","p__29609","vec__29610","p__29617","vec__29619","p__29625","vec__29626","p__29633","vec__29634","matter-id28984","group-id28985","task-id28986","p__29646","vec__29647","matter-id28987","group-id28988","p__29654","vec__29655","p__29660","vec__29661","matter-id28989","group-id28990","work-app.subs/time-lit-code-strs","work-app.subs/time-lit-code-map","cljs.core.map","cljs.core/vector","cljs.core.range","p__29674","vec__29675","key-base","st","vec__29680","seq__29681","cljs.core/seq","first__29682","cljs.core/first","cljs.core/next","first","rest","clojure.string/split-lines","cljs.core.reduce","p__29686","vec__29688","acc","i","s","cljs.core.assoc","cljs.core/merge","work-app.subs/time-lit-code-opts","p__29708","vec__29709","vec__29714","seq__29715","first__29716","p__29722","vec__29723","key-leaf","code","cljs.core/clj->js","work-app.subs/time-lit-codes-opts-ds","cljs.core.drop","cljs.core.mapv","p__29734","vec__29736","vec__29739","seq__29740","first__29741","group-i","frst","clojure.string.split","p__29747","vec__29748","p__29755","vec__29757","e","G__29761","G__29762","re-posh.core/reg-sub","ds","re_frame.core.subscribe","datoms","cljs.core.sort_by","datascript.core/db-with","datascript.core/db","datascript.core.create_conn","work-app.ds-schema/ds-schema","p__29784","vec__29785","a","v","db","G__29795","G__29796","re-posh.core/reg-pull-sub","G__29798","G__29799","re-posh.core/reg-pull-many-sub","work-app.subs/client-to-matter-id-map","client","map__29825","cljs.core/--destructure-map","cljs.core.get","id","name","number","matters","matter","cljs.core/vals","G__29851","G__29852","re-posh.core/reg-query-sub","G__29863","G__29864","p__29878","vec__29879","data","client-map","cljs.core.apply","matter-id","p__29903","vec__29904","matter-info-map"],"sourcesContent":[";; (c) David F Stearns 2023\n\n(ns work-app.subs\n  (:require\n   [work-app.schema :as schema :refer [app-schema path schema-get]]\n   [work-app.macs :as mcr :include-macros true]\n\n   [re-frame.core :as rf]\n   [re-posh.core :as rp]\n   [malli.core :as m]\n   [malli.error :as me]\n   [malli.generator :as mg]\n   [malli.provider :as mp]\n   [malli.util :as mu]\n   [reagent.core :as r]\n   [goog.object :as go]\n\n   [datascript.core :as ds]))\n\n(def <sub (comp deref rf/subscribe))\n\n(comment\n  (filter #(= (second %) ::task-debouncer) (drop 1 (macroexpand '(mcr/extractor-subs))))\n\n  (let [schema {:code/label    {:db/cardinality :db.cardinality/one}\n                :code/children {:db/cardinality :db.cardinality/many\n                                :db/valueType   :db.type/ref\n                                :db/isComponent true}\n                :matter/codes  {:db/cardinality :db.cardinality/many\n                                :db/isComponent true\n                                :db/valueType   :db.type/ref}}\n        conn   (ds/create-conn schema)\n        db     (ds/db-with @conn [{:db/id        -1\n                                   :matter/codes -2}\n                                  {:db/id         -2\n                                   :code/label    \"A\"\n                                   :code/children -3}\n                                  {:db/id         -3\n                                   :code/label    \"A-1\"\n                                   :code/children -4}\n                                  {:db/id      -4\n                                   :code/label \"A-1-1\"}])\n        ]\n    (ds/pull db '[:code/_children :matter/_codes] 2)\n    (ds/pull db '[:db/id {:code/_children ...} {:matter/_codes ...}] 4)\n  )\n  )\n\n(mcr/extractor-subs)\n\n(def time-lit-code-strs\n  [\"L100 Case Assessment, Development and Administration\nL110 Fact Investigation/Development\nL120 Analysis/Strategy\nL130 Experts/Consultants\nL140 Document/File Management\nL150 Budgeting\nL160 Settlement/Non-Binding ADR\nL190 Other Case Assessment, Development and Administration\"\n   \"L200 Pre-Trial Pleadings and Motions\nL210 Pleadings\nL220 Preliminary Injunctions/Provisional Remedies\nL230 Court Mandated Conferences\nL240 Dispositive Motions\nL250 Other Written Motions and Submissions\nL260 Class Action Certification and Notice\"\n   \"L300 Discovery\nL310 Written Discovery\nL320 Document Production\nL330 Depositions\nL340 Expert Discovery\nL350 Discovery Motions\nL390 Other Discovery\"\n   \"L400 Trial Preparation and Trial\nL410 Fact Witnesses\nL420 Expert Witnesses\nL430 Written Motions and Submissions\nL440 Other Trial Preparation and Support\nL450 Trial and Hearing Attendance\nL460 Post-Trial Motions and Submissions\nL470 Enforcement\"\n   \"L500 Appeal\nL510 Appellate Motions and Submissions\nL520 Appellate Briefs\nL530 Oral Argument\"\n   \"A100 Activities\nA101 Plan and prepare for\nA102 Research\nA103 Draft/revise\nA104 Review/analyze\nA105 Communicate (in firm)\nA106 Communicate (with client)\nA107 Communicate (other outside counsel)\nA108 Communicate (other external)\nA109 Appear for/attend\nA110 Manage data/files\nA111 Other\"\n   \"E100 Expenses\nE101 Copying\nE102 Outside printing\nE103 Word processing\nE104 Facsimile\nE105 Telephone\nE106 Online research\nE107 Delivery services/messengers\nE108 Postage\nE109 Local travel\nE110 Out-of-town travel\nE111 Meals\nE112 Court fees\nE113 Subpoena fees\nE114 Witness fees\nE115 Deposition transcripts\nE116 Trial transcripts\nE117 Trial exhibits\nE118 Litigation support vendors\nE119 Experts\nE120 Private investigators\nE121 Arbitrators/mediators\nE122 Local counsel\nE123 Other professionals\nE124 Other\"])\n\n(def time-lit-code-map\n  (->> time-lit-code-strs\n       (map vector (range))\n       (map (fn [[key-base st]]\n              (let [[first  & rest] (clojure.string/split-lines st)]\n                (reduce\n                 (fn [acc [i s]]\n                   (assoc acc (str key-base \"-\" i) s))\n                 {(str key-base) first}\n                 (map vector (range) rest)))))\n       (reduce merge)))\n\n(def time-lit-code-opts\n  (->>\n   time-lit-code-strs\n   (map vector (range))\n   (map (fn [[key-base s]]\n          (let [[first & rest] (clojure.string/split-lines s)]\n            {:key (str key-base)\n             :label first\n             :icon \"pi pi-inbox\"\n             :children (->> rest\n                            (map vector (range))\n                            (map (fn [[key-leaf code]]\n                                   {:key (str key-base \"-\" key-leaf)\n                                    :label code\n                                    :leaf true})))})))\n   clj->js))\n\n(def time-lit-codes-opts-ds\n  (->> time-lit-code-strs\n       (map clojure.string/split-lines)\n       (map vector (drop 1 (range)))\n       (mapv (fn [[group-i [frst & rest]]]\n              (let [key-base (str group-i)]\n                {;:db/id         (- group-i)\n                 :code/key      key-base\n                 :code/label    frst\n                 :code/code (first (clojure.string/split frst #\" \"))\n                 :code/children (->> rest\n                                     (map vector (range))\n                                     (mapv (fn [[key-leaf code]]\n                                             {:code/key   (str key-base \"-\" key-leaf)\n                                              :code/label code})))})))))\n\n(rf/reg-sub ::identity\n            (fn [_ [_ e]] e))\n\n\n(rp/reg-sub ::ds-db-inter\n            (fn [ds _]\n              {:type  :query\n               :query '[:find ?e ?a ?v\n                        :in $\n                        :where [?e ?a ?v]]}))\n\n(rf/reg-sub ::ds-db\n            (fn [_]\n              (rf/subscribe [::ds-db-inter]))\n            (fn [datoms]\n              (sort-by first datoms)))\n\n(rf/reg-sub ::ds-db-actual\n            (fn [_] (rf/subscribe [::ds-db-inter]))\n            (fn [datoms]\n              (ds/db-with (ds/db (ds/create-conn work-app.ds-schema/ds-schema)) (mapv (fn [[e a v]] [:db/add e a v]) datoms)\n                                    )))\n\n(rf/reg-sub ::db\n            (fn [db _] db))\n\n(rp/reg-pull-sub ::pull-entity\n '[*])\n\n(rp/reg-pull-many-sub ::pull-entities\n            '[*])\n\n(defn client-to-matter-id-map [client]\n  \"takes a client entry and returns a map of matter-id to\n   {:matter-id :matter-name :matter-number :client-id :client-name :client-number :cm-number}\"\n  (let [{:keys [id name number matters]} client]\n    (reduce (fn [acc matter]\n              (assoc acc (:id matter)\n                     {:matter-id (:id matter)\n                      :matter-name (:name matter)\n                      :matter-number (:number matter)\n                      :client-id id\n                      :client-name name\n                      :client-number number\n                      :cm-number (str number \"-\" (:number matter))}))\n            {}\n            (vals matters))))\n\n(rp/reg-query-sub ::matters-with-tasks-ds\n                  '[:find [?e ...]\n                    :in $ ?d\n                    :where\n                    [?e :matter/tasks ?t]\n                    [?t :task/date ?d]])\n\n(rp/reg-query-sub ::matter-codes\n                  '[:find ?codes .\n                    :in $ ?m-id\n                    :where\n                    [?m-id :matter/codes ?codes]])\n\n(rf/reg-sub ::matters-edit-dialog-data\n            (fn [db [_ data]]\n              (get-in db [:app-state :matters :edit-dialog-data])))\n\n(rf/reg-sub ::matters-dialog-new-cm?\n            (fn [db _]\n              (get-in db [:app :matters :new-dialog-cm?])))\n\n(rf/reg-sub ::matter-id-info-map\n            (fn [_]\n              (rf/subscribe [::clients]))\n            (fn [client-map]\n              (->> client-map\n                   vals\n                   (map client-to-matter-id-map)\n                   (apply merge))))\n\n(rf/reg-sub ::matter-id-info\n            (fn [matter-id]\n              (rf/subscribe [::matter-id-info-map]))\n            (fn [matter-info-map [_ matter-id]]\n              (get matter-info-map matter-id)))\n\n"]}