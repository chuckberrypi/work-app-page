{"version":3,"sources":["work_app/core.cljs"],"mappings":"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","names":["work-app.core/conn","work-app.ds-schema/ds-schema","datascript.core/empty-db","datascript.core/conn-from-db","re-posh.core/connect!","p1__36023#","datascript.core.listen_BANG_","cljs.core/clj->js","js/console.log","cljs.core/add-watch","re-posh.db/store","k","a","new","old","work-app.core/confirm-dialog","js/module$node_modules$primereact$dialog$dialog_cjs.Dialog","work-app.subs/<sub","G__36024","work-app.events/>evt","js/module$node_modules$primereact$button$button_cjs.Button","G__36025","G__36026","G__36027","work-app.core/hello-world","js/module$node_modules$primereact$toast$toast_cjs.Toast","el","G__36028","js/module$node_modules$primereact$tabview$tabview_cjs.TabView","js/module$node_modules$primereact$tabview$tabview_cjs.TabPanel","work-app.matters/matters","work-app.time-entry/time-entry","work-app.shared/formatted-area","work-app.core/dev-setup","work-app.config/debug?","cljs.core.println","work-app.core/mount-root","re-frame.core/clear-subscription-cache!","r-node","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","work-app.core/init","work-app.core/ticker","js/setInterval","G__36029","goog.events/listen","e","and__5043__auto__","cljs.core._EQ_","G__36030","G__36032","work-app.events/>evt-sync"],"sourcesContent":[";; (c) David F Stearns 2023\n;; (c) David Stearns 2023\n(ns work-app.core\n  (:require\n   [cljs.core.async :as async :refer [go]]\n   [cljs.core.async.interop :refer-macros [<p!] ]\n   [cljs.pprint :refer-macros [formatter formatter-out]]\n                                        ; [differ.core :as differ :refer [diff]]\n   [goog.string :as str]\n   [goog.events :as ev]\n\n   [re-posh.core :as rp :refer [connect!]]\n   [re-frame.core :as rf]\n   [reagent.dom :as rd]\n   ;; [reitit.core :as rt]\n\n   [work-app.ds-schema :as dss :refer [ds-schema]]\n   [work-app.subs :as s :refer [<sub]]\n   [work-app.events :as e :refer [>evt >evt-sync]]\n\n   [work-app.cal :as cal]\n   [work-app.matters :as matters]\n   [work-app.nrl :as nrl]\n   [work-app.shared :as shared :refer [formatted-area]]\n   [work-app.ds-schema :as schema-ds :refer [ds-schema]]\n   [work-app.text-trim :as text-trim]\n   [work-app.time-entry :as time-entry]\n   [work-app.config :as config]\n\n   [\"react\" :refer [useState] :as rct]\n   [\"primereact/button\" :refer [Button]]\n   [\"primereact/dialog\" :refer [Dialog]]\n   [\"primereact/scrollpanel\" :refer [ScrollPanel]]\n   [\"primereact/tabview\" :refer [TabView TabPanel]]\n   [\"primereact/toast\" :refer [Toast]]\n\n   [datascript.core :as ds]))\n\n(def conn (-> schema-ds/ds-schema ds/empty-db ds/conn-from-db))\n\n(connect! conn)\n\n(datascript.core/listen! conn #(-> % :tx-data clj->js js/console.log))\n\n(add-watch re-posh.db/store :store-watch (fn [k a new old] (js/console.log (str \"RRR\" (:datoms new)))))\n\n(defn confirm-dialog []\n [:> Dialog {:visible (<sub [::s/dialog-visible])\n               :on-hide #(>evt [::e/dialog-toggle])}\n    [:div (<sub [::s/dialog-body])]\n    [:> Button {:label \"Yes\"\n                :icon \"pi pi-check\"\n                :class \"p-button-success\"\n                :on-click #(do\n                             (>evt [::e/dialog-confirmed])\n                             (>evt [::e/dialog-toggle]))}]\n    [:> Button {:label \"No\"\n                :icon \"pi pi-times\"\n                :class \"p-button-danger\"\n                :on-click #(>evt [::e/dialog-toggle])}]])\n\n(defn hello-world []\n  [:div {:style {:width  \"100%\"\n                 :height \"100%\"}}\n   [:> Toast {:ref (fn [el]\n                     (>evt [::e/set-toast el]))}]\n   [:> TabView {;:class \"fixed\"\n                :style {:height \"100%\"}}\n    (comment  [:> TabPanel {:header \"Calendar\"}\n               [cal/cal]]\n              [:> TabPanel {:header \".nrl Links\"}\n               [nrl/nrl]])\n    [:> TabPanel {:class  \"dfs-tab-panel\"\n                  :header \"Matters\"}\n     [:f> matters/matters]]\n    [:> TabPanel {:header \"Time Entry\"\n                  :class  \"dfs-tab-panel\"}\n     [:f> time-entry/time-entry]]\n    (comment)\n    [:> TabPanel {:header \"DS DB\"}\n     [formatted-area (<sub [::s/ds-db])]]\n    [:> TabPanel {:header \"DS DB\"}\n     [formatted-area (<sub [::s/ds-db-actual])]]\n    [:> TabPanel {:header \"DB\"}\n     [formatted-area (<sub [::s/db])]]\n    ;; [:> TabPanel {:header \"Text Trim\"}\n    ;;  [:f> text-trim/text-trim-view]]\n\n    ;; [:> TabPanel {:header \"PDF Annots\"}\n    ;;  [:f> pdf/pdf-annot]]\n    ]])\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (rf/clear-subscription-cache!)\n  (let [r-node (. js/document (getElementById \"app\"))]\n    (rd/unmount-component-at-node r-node)\n    (rd/render [hello-world] r-node)))\n\n(defn init []\n  (def ticker (js/setInterval #(>evt [::e/tick]) 1000))\n  (ev/listen js/document \"keypress\" (fn [e]\n                                      (when (and (= (.-keyCode e) 32)\n                                                 (.-shiftKey e))\n                                        (.preventDefault e))\n                                      (>evt [::e/key-press e]))\n  (>evt-sync [::e/initialize-db])\n  (dev-setup)\n  (mount-root)))\n\n;; (defn db-dialog []\n;;   [:> Dialog {:on-hide #(>evt [::e/db-dialog-visible])\n;;               :visible (<sub [::s/db-dialog-visible])\n;;               :header \"Header!\"\n;;               :style {:width \"70%\"}}\n;;    [formatted-area (<sub [::s/db])]\n;;    ;; [formatted-area (<sub [::s/validated])]\n;;    ])\n"]}