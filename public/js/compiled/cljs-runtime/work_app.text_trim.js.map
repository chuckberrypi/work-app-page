{"version":3,"sources":["work_app/text_trim.cljs"],"mappings":";;;;AAaA,oCAAA,pCAAMA;AAAN,AACE,IAAAC,aAAkB,yCAAA,zCAACK;QAAnB,AAAAJ,4CAAAD,WAAA,IAAA,/DAAOG;cAAP,AAAAF,4CAAAD,WAAA,IAAA,rEAASI;AAAT,AAAA,0FAAA,iDAAA,mFAAA,qDAAA,2CAAA,uDAAA,2CAAA,0DAAA,uBAAA,mFAAA,4HAAA,2CAAA,oDAAA,KAAA,sDAAA,KAAA,wDAAA,+DAAA,WAAAF,9WAGQI,kSAEsBH;AAL9B,AAOmC,IAAAI,WAAS,AAAA,AAAAL;AAAT,AAAA,sFAAAK,8BAAAA,5GAACH,wCAAAA,kDAAAA;mBAPpC,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,0DAAA,QAAA,mEAAA,sBAAA,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,gEAAA,sBAAA,mFAAA,uGAAA,2CAAA,uDAAA,YAAA,6DAAA,nOAaUI;AAbV,AAc6B,OAACC;2BAd9B,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,gEAAA,sBAAA,mFAAA,uGAAA,2CAAA,uDAAA,aAAA,6DAAA,pOAgBUD;AAhBV,AAiB6B,IAAAE,WAAS,qBAAMP,JAAEQ;IAAAA,QACN,UAAA,SAAA,nBAAUA;IADJA,QAEN,cAAA,SAAA,vBAAUA;IAFJA,QAGN,aAAA,bAASA;AAHX,AAIE,OAAA,gBAAaA;;AAJxB,AAAA,sFAAAD,8BAAAA,5GAACN,wCAAAA,kDAAAA;2BAjB9B,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,gEAAA,sBAAA,mFAAA,uGAAA,2CAAA,uDAAA,cAAA,6DAAA,rOAuBUI;AAvBV,AAwB6B,OAACI,+BAA0BT,AACA,UAAA,KAAA,fACA,4BAAA,KAAA;2BA1BxD,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,gEAAA,sBAAA,mFAAA,uGAAA,2CAAA,uDAAA,aAAA,6DAAA,pOA4BUK;AA5BV,AA6B6B,sCAAA,/BAACI;;;AAGhC","names":["work-app.text-trim/text-trim-view","vec__42123","cljs.core.nth","p1__42118#","v","set-val","js/module$node_modules$react$index.useState","js/module$node_modules$primereact$inputtextarea$inputtextarea_cjs.InputTextarea","G__42126","js/module$node_modules$primereact$button$button_cjs.Button","work-app.shared/log-clipboard","G__42127","$","work-app.shared/copy-rich-text"],"sourcesContent":[";; (c) David F Stearns 2023\n(ns work-app.text-trim\n  (:require\n   [work-app.shared :as shared]\n   [goog.string :as st]\n\n   [\"react\" :refer [useState] :as rct]\n\n   [\"primereact/inputtextarea\" :refer [InputTextarea]]\n   [\"primereact/button\" :refer [Button]]\n\n   [goog.string :as str]))\n\n(defn text-trim-view []\n  (let [[v set-val] (useState \"\")]\n    [:<>\n     [:span {:style {:display \"flex\"}}\n      [:> InputTextarea {:rows 10\n                         :cols 30\n                         :value v\n                         ;; :value (:text-area @app-state)\n                         :on-change #(set-val (.. % -target -value))\n                         ;; :on-change #(swap! app-state assoc :text-area (.. % -target -value))\n                         }]\n      [:div {:style {:display \"block\"\n                     :margin-left \"5px\"}}\n       [:div {:style {:margin-top \"4px\"}}\n        [:> Button {:label \"Log Board\"\n                    :on-click #(shared/log-clipboard)}]]\n       [:div {:style {:margin-top \"4px\"}}\n        [:> Button {:label \"Wrap Quote\"\n                    :on-click #(set-val (as-> v $\n                                          (.replace $ \"\u201c\" \"\u2018\")\n                                          (.replace $ \"\u201d\" \"\u2019\")\n                                          (.concat $ \"\u201d\")\n                                          (.concat \"\u201d\" $)))}]]\n       [:div {:style {:margin-top \"4px\"}}\n        [:> Button {:label \"Single Line\"\n                    :on-click #(shared/copy-rich-text (-> v\n                                                          (.replace \"\\n\" \" \")\n                                                          (.replace \"  \" \" \")))}]]\n       [:div {:style {:margin-top \"4px\"}}\n        [:> Button {:label \"Fancy Copy\"\n                    :on-click #(shared/copy-rich-text \"<u> Underlined </u> <b> bold </b> <i> Italic </i>\")}]]]]]))\n\n\n(comment\n  (let [s \"One line \\n Two lines \\n Three Lines \\n\"]\n    (-> s (.replace \"\\n\" \"xx\") js/console.log)\n    (js/console.log s))\n\n  \u201cOne\u201d \u2018Two\u2019\n\n  )"]}