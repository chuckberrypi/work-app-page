shadow$provide.module$node_modules$primereact$scrollpanel$scrollpanel_cjs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$react$index");var hooks=require("module$node_modules$primereact$hooks$hooks_cjs"),utils=require("module$node_modules$primereact$utils$utils_cjs");require=require("module$node_modules$primereact$componentbase$componentbase_cjs");var React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);
e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(global),ScrollPanelBase=require.ComponentBase.extend({defaultProps:{__TYPE:"ScrollPanel",id:null,style:null,className:null,children:void 0}});require=React__namespace.forwardRef(function(inProps,ref){var props=ScrollPanelBase.getProps(inProps);inProps=ScrollPanelBase.setMetaData({props}).ptm;
var containerRef=React__namespace.useRef(null),contentRef=React__namespace.useRef(null),xBarRef=React__namespace.useRef(null),yBarRef=React__namespace.useRef(null),isXBarClicked=React__namespace.useRef(!1),isYBarClicked=React__namespace.useRef(!1),lastPageX=React__namespace.useRef(null),lastPageY=React__namespace.useRef(null),scrollXRatio=React__namespace.useRef(null),scrollYRatio=React__namespace.useRef(null),frame=React__namespace.useRef(null),initialized=React__namespace.useRef(!1),moveBar=function(){var totalWidth=
contentRef.current.scrollWidth,bottom=-1*(containerRef.current.clientHeight-xBarRef.current.clientHeight);scrollXRatio.current=contentRef.current.clientWidth/totalWidth;var totalHeight=contentRef.current.scrollHeight,right=-1*(containerRef.current.clientWidth-yBarRef.current.clientWidth);scrollYRatio.current=contentRef.current.clientHeight/totalHeight;frame.current=window.requestAnimationFrame(function(){1<=scrollXRatio.current?utils.DomHandler.addClass(xBarRef.current,"p-scrollpanel-hidden"):(utils.DomHandler.removeClass(xBarRef.current,
"p-scrollpanel-hidden"),xBarRef.current.style.cssText="width:"+Math.max(100*scrollXRatio.current,10)+"%; left:"+contentRef.current.scrollLeft/totalWidth*100+"%;bottom:"+bottom+"px;");1<=scrollYRatio.current?utils.DomHandler.addClass(yBarRef.current,"p-scrollpanel-hidden"):(utils.DomHandler.removeClass(yBarRef.current,"p-scrollpanel-hidden"),yBarRef.current.style.cssText="height:"+Math.max(100*scrollYRatio.current,10)+"%; top: calc("+contentRef.current.scrollTop/totalHeight*100+"% - "+xBarRef.current.clientHeight+
"px);right:"+right+"px;")})},onDocumentMouseMove=function(event){isXBarClicked.current?onMouseMoveForXBar(event):(isYBarClicked.current||onMouseMoveForXBar(event),onMouseMoveForYBar(event))},onMouseMoveForXBar=function(event){var deltaX=event.pageX-lastPageX.current;lastPageX.current=event.pageX;frame.current=window.requestAnimationFrame(function(){contentRef.current.scrollLeft+=deltaX/scrollXRatio.current})},onMouseMoveForYBar=function(event){var deltaY=event.pageY-lastPageY.current;lastPageY.current=
event.pageY;frame.current=window.requestAnimationFrame(function(){contentRef.current.scrollTop+=deltaY/scrollYRatio.current})},onDocumentMouseUp=function onDocumentMouseUp(event){utils.DomHandler.removeClass(yBarRef.current,"p-scrollpanel-grabbed");utils.DomHandler.removeClass(xBarRef.current,"p-scrollpanel-grabbed");utils.DomHandler.removeClass(document.body,"p-scrollpanel-grabbed");document.removeEventListener("mousemove",onDocumentMouseMove);document.removeEventListener("mouseup",onDocumentMouseUp);
isXBarClicked.current=!1;isYBarClicked.current=!1},refresh=function(){moveBar()};hooks.useMountEffect(function(){moveBar();window.addEventListener("resize",moveBar);var containerStyles=getComputedStyle(containerRef.current),xBarStyles=getComputedStyle(xBarRef.current),pureContainerHeight=utils.DomHandler.getHeight(containerRef.current)-parseInt(xBarStyles.height,10);"none"!==containerStyles["max-height"]&&0===pureContainerHeight&&(contentRef.current.offsetHeight+parseInt(xBarStyles.height,10)>parseInt(containerStyles["max-height"],
10)?containerRef.current.style.height=containerStyles["max-height"]:containerRef.current.style.height=contentRef.current.offsetHeight+parseFloat(containerStyles.paddingTop)+parseFloat(containerStyles.paddingBottom)+parseFloat(containerStyles.borderTopWidth)+parseFloat(containerStyles.borderBottomWidth)+"px");initialized.current=!0});hooks.useUnmountEffect(function(){initialized.current&&window.removeEventListener("resize",moveBar);frame.current&&window.cancelAnimationFrame(frame.current)});React__namespace.useImperativeHandle(ref,
function(){return{props,refresh,getElement:function(){return containerRef.current},getContent:function(){return contentRef.current},getXBar:function(){return xBarRef.current},getYBar:function(){return yBarRef.current}}});ref=utils.mergeProps({id:props.id,ref:containerRef,style:props.style,className:utils.classNames("p-scrollpanel p-component",props.className)},ScrollPanelBase.getOtherProps(props),inProps("root"));var wrapperProps=utils.mergeProps({className:"p-scrollpanel-wrapper"},inProps("wrapper")),
contentProps=utils.mergeProps({className:"p-scrollpanel-content",ref:contentRef,onScroll:moveBar,onMouseEnter:moveBar},inProps("content")),barXProps=utils.mergeProps({ref:xBarRef,className:"p-scrollpanel-bar p-scrollpanel-bar-x",onMouseDown:function(event){isXBarClicked.current=!0;lastPageX.current=event.pageX;utils.DomHandler.addClass(xBarRef.current,"p-scrollpanel-grabbed");utils.DomHandler.addClass(document.body,"p-scrollpanel-grabbed");document.addEventListener("mousemove",onDocumentMouseMove);
document.addEventListener("mouseup",onDocumentMouseUp);event.preventDefault()}},inProps("barx"));inProps=utils.mergeProps({ref:yBarRef,className:"p-scrollpanel-bar p-scrollpanel-bar-y",onMouseDown:function(event){isYBarClicked.current=!0;lastPageY.current=event.pageY;utils.DomHandler.addClass(yBarRef.current,"p-scrollpanel-grabbed");utils.DomHandler.addClass(document.body,"p-scrollpanel-grabbed");document.addEventListener("mousemove",onDocumentMouseMove);document.addEventListener("mouseup",onDocumentMouseUp);
event.preventDefault()}},inProps("bary"));return React__namespace.createElement("div",ref,React__namespace.createElement("div",wrapperProps,React__namespace.createElement("div",contentProps,props.children)),React__namespace.createElement("div",barXProps),React__namespace.createElement("div",inProps))});require.displayName="ScrollPanel";exports.ScrollPanel=require}
//# sourceMappingURL=module$node_modules$primereact$scrollpanel$scrollpanel_cjs.js.map
