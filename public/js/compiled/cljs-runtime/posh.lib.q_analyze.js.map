{"version":3,"sources":["posh/lib/q_analyze.cljc"],"mappings":"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","names":["posh.lib.q-analyze/take-until","stop-at?","ls","or__5045__auto__","cljs.core/empty?","G__24098","cljs.core/first","cljs.core/cons","G__24102","G__24103","cljs.core/rest","posh.lib.q-analyze/rest-at","rest-at?","G__24110","posh.lib.q-analyze/split-list-at","split-at?","cljs.core.merge","G__24124","G__24125","posh.lib.q-analyze/query-to-map","query","cljs.core/map?","cljs.core/keyword?","posh.lib.q-analyze/dbvar?","x","cljs.core/Symbol","cljs.core._EQ_","posh.lib.q-analyze/qvar?","posh.lib.q-analyze/get-all-vars","cljs.core/coll?","clojure.set.union","G__24156","G__24157","cljs.core.conj","G__24158","G__24161","posh.lib.q-analyze/qvar-gen","qvar-count","cljs.core.atom","cljs.core.symbol","cljs.core.swap_BANG_","cljs.core/inc","posh.lib.q-analyze/eav?","v","cljs.core/vector?","cljs.core/second","posh.lib.q-analyze/wildcard?","s","posh.lib.q-analyze/normalize-eav-helper","eav","n","neweav","vars","and__5043__auto__","G__24200","G__24201","G__24202","G__24203","var","G__24204","G__24205","G__24206","G__24207","posh.lib.q-analyze/normalize-eav","dbeav","cljs.core/vec","cljs.core.concat","cljs.core.drop","posh.lib.q-analyze/normalize-all-eavs","where","cljs.core/list?","cljs.core/some","G__24208","G__24209","cljs.core.map","posh.lib.q-analyze/get-eavs","item","cljs.core/seq?","G__24210","G__24211","G__24212","G__24213","G__24214","ocr-24215","cljs.core/count","ocr-24215_0__24218","cljs.core.nth","ocr-24215_0__24218_0__24220","cljs.core.match/backtrack","e24231","js/Error","e__23058__auto__","e24229","e24227","db","e","a","G__24233","G__24228","G__24234","posh.lib.q-analyze/qm-to-query","qm","cljs.core.reduce","p__24237","vec__24238","xs","k","posh.lib.q-analyze/create-q-datoms","results","eavs","cljs.core/set","cljs.core.mapcat","r","vs","cljs.core/zipmap","p1__24241#","cljs.core.get","posh.lib.q-analyze/count-qvars","cljs.core.merge_with","cljs.core/+","G__24244","G__24245","G__24246","posh.lib.q-analyze/fill-qvar-set","qvar","iter__5523__auto__","s__24248","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__24250","cljs.core/chunk-buffer","i__24249","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__24247","cljs.core/chunk-rest","posh.lib.q-analyze/seq-merge-with","f","seq1","seq2","G__24257","G__24258","G__24260","G__24261","G__24262","posh.lib.q-analyze/stack-vectors","stacked","cljs.core/conj","cljs.core.take","cljs.core.repeat","p__24269","vec__24273","posh.lib.q-analyze/pattern-from-eav--old","vec__24276","qe","qa","qv","s__24281","xs__6360__auto__","iterys__5519__auto__","s__24283","s__24286","b__24288","i__24287","iter__24285","fs__5520__auto__","iter__24282","iter__24280","ee","aa","vv","wildcard-count","p1__24265#","exposed-qvars","p__24289","vec__24290","p__24298","vec__24299","var?","val","cljs.core.not_EQ_","p1__24267#","posh.lib.q-analyze/get_","m","posh.lib.q-analyze/pattern-from-eav","ocr-24308","ocr-24309","ocr-24308_0__24348","ocr-24308_1__24351","ocr-24308_2__24353","e24530","ocr-24309_2__24369","e24533","e24534","e24531","e24523","ocr-24309_1__24373","e24526","e24527","e24525","e24524","e24400","ocr-24309_0__24382","e24522","e24521","e24403","e24518","ocr-24309_1__24383","e24519","e24520","e24517","e24404","e24516","e24513","e24515","e24514","e24406","ocr-24309_2__24384","e24512","e24511","e24407","e24510","e24509","e24408","e24506","e24505","e24409","e24502","e24501","e24411","e24498","e24497","e24412","e24496","e24495","e24413","e24493","e24492","e24414","e24491","e24490","e24417","e24487","e24474","e24483","e24478","e24480","e24479","e24419","e24445","e24441","e24420","e24440","e24438","e24421","e24435","e24423","e24428","e24429","e24424","e24422","e24401","e24399","posh.lib.q-analyze/filter-pattern-from-eav","ocr-24540","ocr-24541","ocr-24540_0__24566","ocr-24540_1__24567","ocr-24540_2__24568","e24668","ocr-24541_2__24571","e24673","e24674","e24671","e24657","ocr-24541_1__24573","e24663","e24664","e24662","e24658","e24581","ocr-24541_0__24575","e24656","e24655","e24583","e24652","ocr-24541_1__24576","e24653","e24654","e24651","e24584","e24644","e24643","e24585","ocr-24541_2__24577","e24638","e24634","e24586","e24630","e24629","e24587","e24624","e24621","e24623","e24622","e24588","e24620","e24619","e24589","e24618","e24612","e24616","e24617","e24613","e24615","e24614","e24590","e24611","e24610","e24591","e24609","e24604","e24594","e24603","e24597","e24600","e24599","e24595","e24582","e24580","posh.lib.q-analyze/patterns-from-eavs","dbvarmap","patterns","cljs.core/group-by","p__24680","vec__24681","p1__24679#","cljs.core.apply","cljs.core/merge","posh.lib.q-analyze/filter-patterns-from-eavs","p__24689","vec__24690","p1__24687#","posh.lib.q-analyze/just-qvars","ins","args","G__24693","G__24694","posh.lib.q-analyze/get-input-sets","q-fn","varmap","qvars","cljs.core/keys","varvals","cljs.core.partial","cljs.core/vals","varsets","cljs.core/merge-with","p1__24695#","posh.lib.q-analyze/pull-pattern?","posh.lib.q-analyze/replace-find-pulls","qfind","clojure.walk/postwalk","posh.lib.q-analyze/get-pull-var-pairs","posh.lib.q-analyze/match-var-to-db","dbeavs","vec__24699","posh.lib.pull-analyze/ref?","posh.lib.q-analyze/match-vars-to-dbs","G__24702","G__24703","G__24704","posh.lib.q-analyze/index-of","posh.lib.q-analyze/db-arg?","arg","posh.lib.q-analyze/convert-args-to","type","p1__24705#","posh.lib.q-analyze/make-dbarg-map","G__24709","G__24710","posh.lib.q-analyze/split-datoms","datoms","p__24711","vec__24712","db-sym","db-datoms","cljs.core.comp","posh.lib.q-analyze/schema-ref?","schema","posh.lib.q-analyze/indexes-of","coll","p1__24716#","p2__24715#","cljs.core.keep_indexed","posh.lib.q-analyze/lookup-ref?","var-name","var-value","clause","remaining","pred__24722","expr__24723","cljs.core/=","posh.lib.q-analyze/resolve-any-idents","entid-fn","input-set","s__24726","b__24728","i__24727","iter__24725","posh.lib.q-analyze/q-analyze","dcfg","retrieve","newqm","fixed-args","p__24740","vec__24741","sym","lookup-ref-patterns","cljs.core.filter","cljs.core.every_pred","p__24744","vec__24745","p__24748","vec__24749","p__24752","vec__24753","posh.lib.util/t-for-datoms","G__24757","G__24758","fexpr__24756","in-vars","eavs-ins","p__24759","vec__24760","seq__24761","first__24762","cljs.core/next","temp__5802__auto__","linked-qvars","cljs.core.remove","cljs.core/nil?","p__24763","vec__24764","rvars","prepped-eavs","p1__24735#","cljs.core/not","p1__24736#","cljs.core/chunk-first"],"sourcesContent":["(ns posh.lib.q-analyze\n  (:require\n   [posh.lib.util :as util]\n   [posh.lib.datom-matcher :as dm]\n   [posh.lib.pull-analyze :as pa]\n   #?(:clj [clojure.core.match :refer [match]]\n      :cljs [cljs.core.match :refer-macros [match]])))\n\n;;;;;;;;; Q-datoms  -- gets datoms for a query\n\n(defn take-until [stop-at? ls]\n  (if (or\n       (empty? ls)\n       (stop-at? (first ls)))\n    []\n    (cons (first ls) (take-until stop-at? (rest ls)))))\n\n(defn rest-at [rest-at? ls]\n  (if (or (empty? ls) (rest-at? (first ls)))\n    ls\n    (recur rest-at? (rest ls))))\n\n(defn split-list-at [split-at? ls]\n  (if (empty? ls)\n    {}\n    (merge {(first ls) (take-until split-at? (take-until split-at? (rest ls)))}\n           (split-list-at split-at? (rest-at split-at? (rest ls))))))\n\n(defn query-to-map [query]\n  (if-not (map? query)\n    (split-list-at keyword? query)\n    query))\n\n(defn dbvar? [x] (and (symbol? x) (= (first (str x)) \\$)))\n\n(defn qvar? [x] (and (symbol? x) (= (first (str x)) \\?)))\n\n(defn get-all-vars [query]\n  (cond\n   (empty? query) #{}\n   (coll? (first query)) (clojure.set/union (get-all-vars (first query))\n                                            (get-all-vars (rest query)))\n   (qvar? (first query)) (conj (get-all-vars (rest query)) (first query))\n   :else (get-all-vars (rest query))))\n\n(def qvar-gen\n  (let [qvar-count (atom 3284832)]\n    (fn [] (symbol (str \"?var\" (swap! qvar-count inc))))))\n\n(defn eav? [v]\n  (and (vector? v)\n       (not (or (coll? (first v))\n                (coll? (second v))))))\n\n(defn wildcard? [s] (= s '_))\n\n(defn normalize-eav-helper [eav n neweav vars]\n  (if (= n 0)\n    {:eav neweav :vars vars}\n    (if (and (first eav) (not (wildcard? (first eav))))\n      (normalize-eav-helper (rest eav) (dec n)\n                            (conj neweav (first eav))\n                            vars)\n      (let [var (qvar-gen)]\n        (normalize-eav-helper (rest eav) (dec n)\n                              (conj neweav var)\n                              (conj vars var))))))\n\n(defn normalize-eav [eav]\n  (let [dbeav (if (dbvar? (first eav))\n                eav\n                (cons (symbol \"$\") eav))]\n    (vec (cons (first dbeav) (concat (:eav (normalize-eav-helper (rest dbeav) 3 [] []))\n                                     (drop 4 dbeav))))))\n\n(defn normalize-all-eavs [where]\n  (cond\n   (empty? where) []\n\n   (list? where)\n   (if (some #{(first where)} ['or-join 'not-join]) ;; skip first vector\n     (concat [(first where) (second where)] (normalize-all-eavs (vec (drop 2 where))))\n     (cons (first where) (normalize-all-eavs (vec (rest where)))))\n\n   (eav? where)\n   (normalize-eav where)\n\n   (and (vector? where) (list? (first where)))\n   where\n\n   (coll? where)\n   (vec (map normalize-all-eavs where))\n\n   :else where))\n\n\n(defn get-eavs [where]\n  (if (empty? where)\n    []\n    (let [item (first where)]\n      (cond\n       (seq? item)\n       (if (some #{(first item)} ['or-join 'not-join]) ;; skip first vector\n         (concat (get-eavs (vec (rest where))) (get-eavs (vec (drop 2 item))))\n         (concat (get-eavs (vec (rest where))) (get-eavs (vec (rest item)))))\n\n       (eav? item)\n       (cons item (get-eavs (rest where)))\n\n       (and (vector? item) (seq? (first item)))\n       (match (vec (concat [(vec (first item))] (rest item)))\n              [['get-else db e a _] v]\n              (concat [[db e a v]] (get-eavs (vec (rest where))))\n              :else (get-eavs (vec (rest where))))\n\n       :else (get-eavs (vec (rest where)))))))\n\n\n(defn qm-to-query [qm]\n  (reduce (fn [xs [k v]]\n            (concat xs [k] v))\n          []\n          qm))\n\n(defn create-q-datoms [results eavs vars]\n  (set\n   (mapcat (fn [r] (let [vs (zipmap vars r)]\n                    (map (fn [eav]\n                           (vec (map #(if (qvar? %) (get vs %) %) eav)))\n                         eavs)))\n           results)))\n\n;;; q pattern gen ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defn count-qvars [xs]\n  (cond\n   (empty? xs) {}\n   (coll? (first xs)) (merge-with + (count-qvars (first xs)) (count-qvars (rest xs)))\n   :else (merge-with +\n                     (when (qvar? (first xs)) {(first xs) 1})\n                     (count-qvars (rest xs)))))\n\n(defn fill-qvar-set [qvar results where]\n  (for [r results]\n    (let [vars (zipmap where r)]\n      (get vars qvar))))\n\n(defn seq-merge-with [f seq1 seq2]\n  (if (empty? seq1)\n    []\n    (cons (f (first seq1) (first seq2))\n          (seq-merge-with f (rest seq1) (rest seq2)))))\n\n(defn stack-vectors [vs]\n  (reduce (fn [stacked eav]\n            (seq-merge-with conj stacked eav))\n          (take (count (first vs)) (repeat #{})) vs))\n\n(defn pattern-from-eav--old [vars [e a v :as eav]]\n  (let [[qe qa qv] (map qvar? eav)]\n    (for [ee (if qe ['_ (get vars e)] [e])\n          aa (if qa ['_ (get vars a)] [a])\n          vv (if qv ['_ (get vars v)] [v])\n          :when (let [wildcard-count\n                      (reduce + (map #(if (= '_ %) 1 0) [ee aa vv]))\n                      exposed-qvars\n                      (reduce + (map (fn [[var? val]]\n                                       (if (and var? (not= val '_))\n                                         1\n                                         0))\n                                     [[qe ee] [qa aa] [qv vv]]))\n                      qvar-count (reduce + (map #(if % 1 0) [qe qa qv]))]\n                  (and (>= wildcard-count 1)\n                       (or (and (> qvar-count 1) (= 1 exposed-qvars))\n                           (<= qvar-count 1))\n                       (<= wildcard-count qvar-count)))]\n      [ee aa vv])))\n\n(defn get_ [m k]\n  \"returns '_ if k is not found\"\n  (or (get m k) '_))\n\n;; generates matching patterns from eavs.\n;; the qvars are \"connecting\" vars that are used between\n;; two eavs in the query. the '_ wildcards are either output\n;; vars or originally wildcards. Input vars and things like\n;; attribs that are hand-typed in the query are there as\n;; they are or as sets (if there was a var that inputted a set)\n(defn pattern-from-eav [vars eav]\n  (match [(vec eav) (vec (map qvar? eav))]\n         [['_ '_ '_] _] [[]]\n         [['_ '_ v] [_ _ false]] [['_ '_ v]]\n         [['_ '_ v] [_ _ true]] [['_ '_ (get_ vars v)]]\n         [['_ a '_] [_ false _]] [['_ a '_]]\n         [['_ a '_] [_ true _]] [['_ (get_ vars a) '_]]\n         [[e '_ '_] [false _ _]] [[e '_ '_]]\n         [[e '_ '_] [true _ _]] [[(get_ vars e) '_ '_]]\n         [[e a '_] [true true _]] [[(get_ vars e) '_ '_]\n                                   ['_ (get_ vars a) '_]]\n         [[e a '_] [true false _]] [[(get_ vars e) a '_]]\n         [[e a '_] [false true _]] [[e (get_ vars a) '_]]\n         [[e a '_] [false false _]] [[e a '_]]\n         [[e '_ v] [true _ true]] [[(get_ vars e) '_ '_]\n                                   ['_ '_ (get_ vars v)]]\n         [[e '_ v] [true _ false]] [[(get_ vars e) '_ v]]\n         [[e '_ v] [false _ true]] [[e '_ (get_ vars v)]]\n         [[e '_ v] [false _ false]] [[e '_ v]]\n         [['_ a v] [_ true true]] [['_ '_  (get_ vars v)]\n                                   ['_ (get_ vars a) '_]]\n         [['_ a v] [_ true false]] [['_ (get_ vars a) v]]\n         [['_ a v] [_ false true]] [['_ a (get_ vars v)]]\n         [['_ a v] [_ false false]] [['_ a v]]\n         [[e a v] [true true true]] [['_ '_  (get_ vars v)]\n                                     ['_ (get_ vars a) '_]\n                                     [(get_ vars e) '_ '_]]\n         [[e a v] [false true true]] [[e '_  (get_ vars v)]\n                                      [e (get_ vars a) '_]]\n         [[e a v] [true false true]] [['_ a  (get_ vars v)]\n                                      [(get_ vars e) a '_]]\n         [[e a v] [true true false]] [['_ (get_ vars a) v]\n                                      [(get_ vars e) '_ v]]\n         [[e a v] [false false true]] [[e a '_]]\n         [[e a v] [true false false]] [['_ a v]]\n         [[e a v] [false true false]] [[e '_ v]]\n         [[e a v] [false false false]] [[e a v]]   ;;; maybe this?\n         :else [[]]))\n\n\n\n\n;; this is the pattern that tells the filter it should update.\n;; it won't match any v's that change unless they are connected\n;; to some other part of the query. i.e. if the query is looking\n;; at :person/name it won't update when the name changes.\n(defn filter-pattern-from-eav [vars eav]\n  (match [(vec eav) (vec (map qvar? eav))]\n         [['_ '_ '_] _] []  ;; if it matches everything, it never\n         ;; needs to update itself\n         [['_ '_ v] [_ _ false]] [['_ '_ v]]\n         [['_ '_ v] [_ _ true]] [['_ '_ (vars v)]]\n         [['_ a '_] [_ false _]] [['_ a '_]]\n         [['_ a '_] [_ true _]] [['_ (vars a) '_]]\n         [[e '_ '_] [false _ _]] [[e '_ '_]]\n         [[e '_ '_] [true _ _]] [[(vars e) '_ '_]]\n         [[e a '_] [true true _]] [[(vars e) '_ '_]\n                                   ['_ (vars a) '_]]\n         [[e a '_] [true false _]] [[(vars e) a '_]]\n         [[e a '_] [false true _]] [[e (vars a) '_]]\n         [[e '_ v] [true _ true]] [[(vars e) '_ '_]\n                                   ['_ '_ (vars v)]]\n         [[e '_ v] [true _ false]] [[(vars e) '_ v]]\n         [[e '_ v] [false _ true]] [[e '_ (vars v)]]\n         [['_ a v] [_ true true]] [['_ '_  (vars v)]\n                                   ['_ (vars a) '_]]\n         [['_ a v] [_ true false]] [['_ (vars a) v]]\n         [['_ a v] [_ false true]] [['_ a (vars v)]]\n         [[e a v] [true true true]] [['_ '_  (vars v)]\n                                     ['_ (vars a) '_]\n                                     [(vars e) '_ '_]]\n         [[e a v] [false true true]] [[e '_  (vars v)]\n                                      [e (vars a) '_]]\n         [[e a v] [true false true]] [['_ a  (vars v)]\n                                      [(vars e) a '_]]\n         [[e a v] [true true false]] [['_ (vars a) v]\n                                      [(vars e) '_ v]]\n         [[e a v] [false false true]] [[e a '_]]\n         [[e a v] [true false false]] [['_ a v]]\n         [[e a v] [false true false]] [[e '_ v]]\n         :else [[]]))\n\n(defn patterns-from-eavs [dbvarmap vars patterns]\n  (->> (group-by first patterns)\n       (map (fn [[k v]]\n              {(:db-id (dbvarmap k)) (mapcat #(pattern-from-eav vars (rest %)) v)}))\n       (apply merge)))\n\n(defn filter-patterns-from-eavs [dbvarmap vars patterns]\n  (->> (group-by first patterns)\n       (map (fn [[k v]]\n              {(:db-id (dbvarmap k)) (mapcat #(filter-pattern-from-eav vars (rest %)) v)}))\n       (apply merge)))\n\n(defn just-qvars [ins args]\n  (if (empty? ins)\n    {}\n    (merge\n     (when-not (and (symbol? (first ins)) (= (first (str (first ins))) \\$))\n       {(first ins) (first args)})\n     (just-qvars (rest ins) (rest args)))))\n\n(defn get-input-sets [q-fn ins args]\n  (let [varmap  (just-qvars ins args)]\n    (if-not (empty? varmap)\n      (let\n          [qvars   (vec (get-all-vars (keys varmap)))\n           varvals (apply\n                    (partial q-fn {:find qvars\n                                   :in (keys varmap)})\n                    (vals varmap))\n           varsets (reduce (partial merge-with conj) (zipmap qvars (repeat #{}))\n                           (map #(zipmap qvars %) varvals))]\n        varsets)\n      {})))\n\n;;;; handling pulls in queries\n\n;;; needs to also extract all the pulls\n\n(defn pull-pattern? [x]\n  (and (coll? x) (= (first x) 'pull) (= 3 (count x))))\n\n(defn replace-find-pulls [qfind]\n  \"replaces pulls in query's :find with just their eid symbol\"\n  (clojure.walk/postwalk (fn [x] (if (pull-pattern? x)\n                                  (second x)\n                                  x)) qfind))\n\n(defn get-pull-var-pairs [qfind]\n  \"returns map of any vars and their pull commands in the :find\"\n  (if (coll? qfind)\n    (cond\n     (empty? qfind) {}\n     (pull-pattern? qfind) {(second qfind) (nth qfind 2)}\n     :else (apply merge (map get-pull-var-pairs qfind)))\n   {}))\n\n(defn match-var-to-db [var dbvarmap dbeavs]\n  (if (empty? dbeavs)\n    nil\n    (let [[db e a v] (first dbeavs)]\n      (if (or (= var e) (and (= var v) (pa/ref? (:schema (dbvarmap db)) a)))\n        (dbvarmap db)\n        (recur var dbvarmap (rest dbeavs))))))\n\n(defn match-vars-to-dbs [vars dbvarmap dbeavs]\n  (if (empty? vars)\n    {}\n    (merge {(first vars) (match-var-to-db (first vars) dbvarmap dbeavs)}\n           (match-vars-to-dbs (rest vars) dbvarmap dbeavs))))\n\n(defn index-of [xs x]\n  (loop [n 0\n         xs xs]\n    (cond\n     (empty? xs) nil\n     (= (first xs) x) n\n     :else (recur (inc n) (rest xs)))))\n\n\n;;;; handling db args: {:conn conn :db db}\n\n(defn db-arg? [arg]\n  (and\n   (map? arg)\n   (:db arg)\n   (:conn arg)))\n\n(defn convert-args-to [type args]\n  (map #(if (db-arg? %) (type %) %) args))\n\n(defn make-dbarg-map [ins args]\n  (if (empty? ins)\n    {}\n    (merge\n     (when (dbvar? (first ins))\n       {(first ins) (first args)})\n     (make-dbarg-map (rest ins) (rest args)))))\n\n(comment\n  (defn split-datoms [dbvarmap datoms]\n    (->> (group-by first datoms)\n         (map (fn [[db db-datoms]]\n                {(dbvarmap db)\n                 (map (comp vec rest) db-datoms)}))\n         (apply merge))))\n\n(defn split-datoms [datoms]\n  (->> (group-by first datoms)\n       (map (fn [[db-sym db-datoms]]\n              {db-sym\n               (map (comp vec rest) db-datoms)}))\n       (apply merge)))\n\n(defn- schema-ref?\n  \"Returns whether attribute identified by k is of :db/valueType :db.type/ref\"\n  [schema k]\n  (= :db.type/ref (:db/valueType (get schema k))))\n\n(defn- indexes-of [e coll] (keep-indexed #(if (= e %2) %1) coll))\n\n(defn- lookup-ref?\n  \"Returns whether var-name is used as lookup-ref inside of query's :where clauses.\n  var-name - the symbolic variable name\n  where - coll of where clauses\n  schema - map of schemas with attribute names as keys\n  Returns boolean true or false\"\n  [schema where var-name var-value]\n  (if-not (coll? var-value)\n    false\n    (loop [clause (first where)\n           remaining (rest where)]\n      (condp = (first (indexes-of var-name clause))\n        1 true\n\n        ;; If datascript supported :db/valueTuple :db.type/tuple, could check that here\n        ;; instead of needing to scan every :where clause to ensure it's not a schema-ref\n        3 (if (schema-ref? schema (nth clause 2))\n            true\n            (if (seq remaining)\n              (recur (first remaining) (rest remaining))\n              false))\n\n        (if (seq remaining)\n          (recur (first remaining) (rest remaining))\n          false)))))\n\n(defn resolve-any-idents\n  \"Given input-set from query, resolves any lookup-refs\n  Inputs:\n  entid-fn - Datomic/DS function to take lookup-ref & returns entid\n  db - value of DB\n  schemas - map with keys matching known schema attributes\n  where - where clauses of query\n  input-set - value from query :in\"\n  [entid-fn db schema where var-name input-set]\n  (set (for [var-value input-set]\n         (if (lookup-ref? schema where var-name var-value)\n           (entid-fn db var-value)\n           var-value))))\n\n;;;;;;;; q function that gives pattern, datoms, and results all in one\n;;;;;;;; query. db should be first of args (for now. later, finding\n;;;;;;;; the t of each datom will be part of the q).\n\n;; instead of passing db's to q-analyze you pass\n;; {:conn conn :db db :schema schema :db-id db-id}\n\n;; it will return the requested info, sorted by db-id.\n\n;; not necessarily working at this time...\n(comment\n  (defn q-analyze-with-pulls [dcfg retrieve query & args]\n    (if (and (= 1 (count retrieve)) (some #{:results} retrieve))\n      {:results (apply (partial (:q dcfg) query) (convert-args-to :db args))}\n      (let [qm            (if-not (map? query)\n                            (query-to-map query)\n                            query)\n            where         (normalize-all-eavs (:where qm))\n            eavs          (get-eavs where)\n            vars          (vec (get-all-vars eavs))\n            newqm         (merge qm {:find vars :where where})\n            newq          (qm-to-query newqm)\n            dbvarmap      (make-dbarg-map (:in qm) args)\n            r             (apply (partial (:q dcfg) newqm) (convert-args-to :db args))\n            ;; handle pull queries:\n            pull-vars     (get-pull-var-pairs (:find qm))\n            pull-vars-dbs (match-vars-to-dbs (keys pull-vars) dbvarmap eavs)\n            no-pulls-find (replace-find-pulls (:find qm))]\n        (merge\n         (when (some #{:pulls} retrieve)\n           {:pulls pull-vars-dbs})\n         (when (some #{:datoms :datoms-t} retrieve)\n           (let [datoms (split-datoms dbvarmap (create-q-datoms r eavs vars))]\n             (merge\n              (when (some #{:datoms} retrieve)\n                {:datoms datoms})\n              (when (some #{:datoms-t} retrieve)\n                {:datoms-t\n                 (->> datoms\n                      (map (fn [[db db-datoms]]\n                             {db\n                              (util/t-for-datoms (:q dcfg) (:db db) db-datoms)}))\n                      (apply merge))}))))\n         (when (some #{:results} retrieve)\n           {:results\n            (d/q {:find (vec no-pulls-find)\n                  :in [[vars '...]]}\n                 (vec r))})\n         (when (some #{:patterns} retrieve)\n           (let\n               [in-vars      (get-input-sets (:in qm) args)\n                eavs-ins     (clojure.walk/postwalk\n                              #(if-let [v (in-vars %)] v %) eavs)\n                qvar-count   (count-qvars eavs-ins)\n                linked-qvars (set (remove nil? (map (fn [[k v]] (if (> v 1) k)) qvar-count)))\n                rvars        (zipmap\n                              vars\n                              (stack-vectors r))\n                prepped-eavs (clojure.walk/postwalk\n                              #(if (and (qvar? %) (not (linked-qvars %))) '_ %)\n                              eavs-ins)]\n             {:patterns (patterns-from-eavs dbvarmap rvars prepped-eavs)})))))))\n\n\n(defn q-analyze [dcfg retrieve query args]\n  (let [qm           (merge\n                      {:in '[$]}\n                      (query-to-map query))\n        where        (normalize-all-eavs (vec (:where qm)))\n        eavs         (get-eavs where)\n        vars         (vec (get-all-vars eavs))\n        newqm        (merge qm {:find vars :where where})\n        ;; This doesn't seem to be getting used anymore\n        ;;newq         (qm-to-query newqm)\n        dbvarmap     (make-dbarg-map (:in qm) args)\n        fixed-args   (->> (zipmap (:in qm) args)\n                          (map (fn [[sym arg]]\n                                 (or (:db (get dbvarmap sym)) arg))))\n        r            (apply (partial (:q dcfg) newqm) fixed-args)\n        lookup-ref-patterns\n        (->> args\n             ;; Would be nice to check by the schema as well, to make sure this is actually a identity attribute\n             (filter (every-pred vector? (comp keyword? first) (comp (partial = 2) count)))\n             (map (fn [[a v]] ['$ '_ a v])))]\n    (merge\n     (when (some #{:datoms :datoms-t} retrieve)\n       (let [datoms (split-datoms (create-q-datoms r eavs vars))]\n         (merge\n          (when (some #{:datoms} retrieve)\n            {:datoms\n             (->> datoms\n                  (map (fn [[db-sym db-datoms]]\n                         {(:db-id (dbvarmap db-sym))\n                          db-datoms}))\n                  (apply merge))})\n          (when (some #{:datoms-t} retrieve)\n            {:datoms-t\n             (->> datoms\n                  (map (fn [[db-sym db-datoms]]\n                         (let [db (dbvarmap db-sym)]\n                           {(:db-id db)\n                            (util/t-for-datoms (:q dcfg) (:db db) db-datoms)})))\n                  (apply merge))}))))\n     (when (some #{:results} retrieve)\n       {:results\n        ((:q dcfg) {:find (vec (:find qm))\n                    :in [[vars '...]]}\n         (vec r))})\n     (when (some #{:patterns :filter-patterns :simple-patterns} retrieve)\n       (let\n           [in-vars      (get-input-sets (:q dcfg) (:in qm) args)\n            eavs-ins    (map (fn [[db & eav]]\n                               (vec\n                                (cons db\n                                      (map\n                                       (fn [var-name]\n                                         (if-let [var-value (in-vars var-name)]\n                                           (resolve-any-idents (:entid dcfg)\n                                                               (:db (get dbvarmap db))\n                                                               (:schema (get dbvarmap db))\n                                                               where\n                                                               var-name\n                                                               var-value)\n                                           var-name))\n                                       eav))))\n                             (concat lookup-ref-patterns eavs))\n            qvar-count   (count-qvars eavs-ins)\n            linked-qvars (set (remove nil? (map (fn [[k v]] (if (> v 1) k)) qvar-count)))\n            rvars        (zipmap\n                          vars\n                          (stack-vectors r))\n            prepped-eavs (clojure.walk/postwalk\n                          #(if (and (qvar? %) (not (linked-qvars %))) '_ %)\n                          eavs-ins)]\n         (merge\n          (when (some #{:simple-patterns} retrieve)\n            {:patterns\n             (patterns-from-eavs dbvarmap rvars\n                                 (clojure.walk/postwalk #(if (qvar? %) '_ %)\n                                                        eavs-ins))})\n          (when (some #{:patterns} retrieve)\n            {:patterns (patterns-from-eavs dbvarmap rvars prepped-eavs)\n             :linked   linked-qvars})\n          (when (some #{:filter-patterns} retrieve)\n            {:filter-patterns (filter-patterns-from-eavs dbvarmap rvars prepped-eavs)})))))))\n"]}