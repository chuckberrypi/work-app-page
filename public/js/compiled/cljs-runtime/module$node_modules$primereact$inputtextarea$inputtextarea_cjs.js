shadow$provide.module$node_modules$primereact$inputtextarea$inputtextarea_cjs=function(global,require,module,exports){function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$react$index");
var keyfilter=require("module$node_modules$primereact$keyfilter$keyfilter_cjs"),tooltip=require("module$node_modules$primereact$tooltip$tooltip_cjs"),utils=require("module$node_modules$primereact$utils$utils_cjs"),React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(global),
InputTextareaBase={defaultProps:{__TYPE:"InputTextarea",autoResize:!1,keyfilter:null,onBlur:null,onFocus:null,onInput:null,onKeyDown:null,onKeyUp:null,onPaste:null,tooltip:null,tooltipOptions:null,validateOnly:!1,children:void 0},getProps:function(props){return utils.ObjectUtils.getMergedProps(props,InputTextareaBase.defaultProps)},getOtherProps:function(props){return utils.ObjectUtils.getDiffProps(props,InputTextareaBase.defaultProps)}};require=React__namespace.memo(React__namespace.forwardRef(function(inProps,
ref){var props=InputTextareaBase.getProps(inProps),elementRef=React__namespace.useRef(ref),cachedScrollHeight=React__namespace.useRef(0),resize=function(initial){var inputEl=elementRef.current;inputEl&&utils.DomHandler.isVisible(inputEl)&&(cachedScrollHeight.current||(cachedScrollHeight.current=inputEl.scrollHeight,inputEl.style.overflow="hidden"),cachedScrollHeight.current!==inputEl.scrollHeight||initial)&&(inputEl.style.height="",inputEl.style.height=inputEl.scrollHeight+"px",parseFloat(inputEl.style.height)>=
parseFloat(inputEl.style.maxHeight)?(inputEl.style.overflowY="scroll",inputEl.style.height=inputEl.style.maxHeight):inputEl.style.overflow="hidden",cachedScrollHeight.current=inputEl.scrollHeight)};React__namespace.useEffect(function(){utils.ObjectUtils.combinedRefs(elementRef,ref)},[elementRef,ref]);React__namespace.useEffect(function(){props.autoResize&&resize(!0)},[props.autoResize]);var isFilled=React__namespace.useMemo(function(){return utils.ObjectUtils.isNotEmpty(props.value)||utils.ObjectUtils.isNotEmpty(props.defaultValue)},
[props.value,props.defaultValue]);inProps=utils.ObjectUtils.isNotEmpty(props.tooltip);var otherProps=InputTextareaBase.getOtherProps(props);isFilled=utils.classNames("p-inputtextarea p-inputtext p-component",{"p-disabled":props.disabled,"p-filled":isFilled,"p-inputtextarea-resizable":props.autoResize},props.className);return React__namespace.createElement(React__namespace.Fragment,null,React__namespace.createElement("textarea",_extends({ref:elementRef},otherProps,{className:isFilled,onFocus:function(event){props.autoResize&&
resize();props.onFocus&&props.onFocus(event)},onBlur:function(event){props.autoResize&&resize();props.onBlur&&props.onBlur(event)},onKeyUp:function(event){props.autoResize&&resize();props.onKeyUp&&props.onKeyUp(event)},onKeyDown:function(event){props.onKeyDown&&props.onKeyDown(event);if(props.keyfilter)keyfilter.KeyFilter.onKeyPress(event,props.keyfilter,props.validateOnly)},onInput:function(event){var target=event.target;props.autoResize&&resize(utils.ObjectUtils.isEmpty(target.value));props.onInput&&
props.onInput(event);utils.ObjectUtils.isNotEmpty(target.value)?utils.DomHandler.addClass(target,"p-filled"):utils.DomHandler.removeClass(target,"p-filled")},onPaste:function(event){props.onPaste&&props.onPaste(event);if(props.keyfilter)keyfilter.KeyFilter.onPaste(event,props.keyfilter,props.validateOnly)}})),inProps&&React__namespace.createElement(tooltip.Tooltip,_extends({target:elementRef,content:props.tooltip},props.tooltipOptions)))}));require.displayName="InputTextarea";exports.InputTextarea=
require}
//# sourceMappingURL=module$node_modules$primereact$inputtextarea$inputtextarea_cjs.js.map
