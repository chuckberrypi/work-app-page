{
"version":3,
"file":"module$node_modules$deepmerge$dist$umd.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/deepmerge/dist/umd.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$deepmerge$dist$umd\"] = function(global,require,module,exports) {\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","deepmerge","cloneUnlessOtherwiseSpecified","value","options","clone","isMergeableObject","Array","isArray","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","Object","keys","forEach","key","arrayMerge","sourceIsArray","targetIsArray","stringValue","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","all","deepmerge.all","array","Error","reduce","prev","next"]
}
